# Generated by Django 5.0.7 on 2024-07-30 13:02

import django.db.models.deletion
import reviews.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('person_id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('first_name_reading', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name_reading', models.CharField(max_length=100)),
                ('first_name_sorting', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name_sorting', models.CharField(max_length=100)),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('full_name_reading', models.CharField(blank=True, max_length=100, null=True)),
                ('wikipedia_link', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaseTextInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_text_name', models.CharField(max_length=500)),
                ('base_text_publisher', models.CharField(blank=True, max_length=256, null=True)),
                ('base_text_publish_year', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_text_name', models.CharField(blank=True, max_length=500, null=True)),
                ('parent_text_publisher', models.CharField(blank=True, max_length=256, null=True)),
                ('parent_text_publish_year', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NDC_Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ndc_code', models.CharField(max_length=10, unique=True)),
                ('genre', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('title_reading', models.CharField(max_length=256)),
                ('title_sorting', models.CharField(blank=True, max_length=256, null=True)),
                ('sub_title', models.CharField(blank=True, max_length=256, null=True)),
                ('sub_title_reading', models.CharField(blank=True, max_length=256, null=True)),
                ('original_title', models.CharField(blank=True, max_length=256, null=True)),
                ('classification_number', models.CharField(blank=True, max_length=50, null=True)),
                ('character_usage', models.CharField(max_length=50)),
                ('copyright_flag', models.BooleanField(default=False)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateField(blank=True, null=True)),
                ('book_card_url', models.URLField()),
                ('role_flag', models.CharField(default='著者', max_length=50)),
                ('text_file_url', models.URLField(blank=True, null=True)),
                ('html_file_url', models.URLField(blank=True, null=True)),
                ('authors', models.ManyToManyField(blank=True, related_name='works', to='reviews.author')),
                ('base_text_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='base_text_info', to='reviews.basetextinfo')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_works', to='reviews.author')),
                ('genre_info1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_works', to='reviews.ndc_classification')),
                ('genre_info2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secondary_works', to='reviews.ndc_classification')),
                ('other_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='other_role_works', to='reviews.author')),
                ('translator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='translated_works', to='reviews.author')),
            ],
            options={
                'unique_together': {('title', 'sub_title', 'original_title', 'book_card_url')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('rating', models.IntegerField(validators=[reviews.models.validate_rating])),
                ('content', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_edited', models.DateTimeField(blank=True, null=True)),
                ('is_spoiler', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_user', to=settings.AUTH_USER_MODEL)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_book', to='reviews.work')),
            ],
        ),
        migrations.CreateModel(
            name='FirstPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publication_info', models.TextField()),
                ('work', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='first_publication', to='reviews.work')),
            ],
        ),
    ]
